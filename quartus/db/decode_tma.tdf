--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone V" LPM_DECODES=16 LPM_WIDTH=4 data enable eq
--VERSION_BEGIN 21.1 cbx_cycloneii 2022:06:23:22:03:45:SJ cbx_lpm_add_sub 2022:06:23:22:03:45:SJ cbx_lpm_compare 2022:06:23:22:03:45:SJ cbx_lpm_decode 2022:06:23:22:03:40:SJ cbx_mgl 2022:06:23:22:04:21:SJ cbx_nadder 2022:06:23:22:03:45:SJ cbx_stratix 2022:06:23:22:03:45:SJ cbx_stratixii 2022:06:23:22:03:45:SJ  VERSION_END


-- Copyright (C) 2022  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and any partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details, at
--  https://fpgasoftware.intel.com/eula.



--synthesis_resources = lut 18 
SUBDESIGN decode_tma
( 
	data[3..0]	:	input;
	enable	:	input;
	eq[15..0]	:	output;
) 
VARIABLE 
	data_wire[3..0]	: WIRE;
	enable_wire	: WIRE;
	eq_node[15..0]	: WIRE;
	eq_wire[15..0]	: WIRE;
	w_anode46127w[1..0]	: WIRE;
	w_anode46136w[3..0]	: WIRE;
	w_anode46153w[3..0]	: WIRE;
	w_anode46163w[3..0]	: WIRE;
	w_anode46173w[3..0]	: WIRE;
	w_anode46183w[3..0]	: WIRE;
	w_anode46193w[3..0]	: WIRE;
	w_anode46203w[3..0]	: WIRE;
	w_anode46213w[3..0]	: WIRE;
	w_anode46225w[1..0]	: WIRE;
	w_anode46232w[3..0]	: WIRE;
	w_anode46243w[3..0]	: WIRE;
	w_anode46253w[3..0]	: WIRE;
	w_anode46263w[3..0]	: WIRE;
	w_anode46273w[3..0]	: WIRE;
	w_anode46283w[3..0]	: WIRE;
	w_anode46293w[3..0]	: WIRE;
	w_anode46303w[3..0]	: WIRE;
	w_data46125w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	enable_wire = enable;
	eq[] = eq_node[];
	eq_node[15..0] = eq_wire[15..0];
	eq_wire[] = ( ( w_anode46303w[3..3], w_anode46293w[3..3], w_anode46283w[3..3], w_anode46273w[3..3], w_anode46263w[3..3], w_anode46253w[3..3], w_anode46243w[3..3], w_anode46232w[3..3]), ( w_anode46213w[3..3], w_anode46203w[3..3], w_anode46193w[3..3], w_anode46183w[3..3], w_anode46173w[3..3], w_anode46163w[3..3], w_anode46153w[3..3], w_anode46136w[3..3]));
	w_anode46127w[] = ( (w_anode46127w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode46136w[] = ( (w_anode46136w[2..2] & (! w_data46125w[2..2])), (w_anode46136w[1..1] & (! w_data46125w[1..1])), (w_anode46136w[0..0] & (! w_data46125w[0..0])), w_anode46127w[1..1]);
	w_anode46153w[] = ( (w_anode46153w[2..2] & (! w_data46125w[2..2])), (w_anode46153w[1..1] & (! w_data46125w[1..1])), (w_anode46153w[0..0] & w_data46125w[0..0]), w_anode46127w[1..1]);
	w_anode46163w[] = ( (w_anode46163w[2..2] & (! w_data46125w[2..2])), (w_anode46163w[1..1] & w_data46125w[1..1]), (w_anode46163w[0..0] & (! w_data46125w[0..0])), w_anode46127w[1..1]);
	w_anode46173w[] = ( (w_anode46173w[2..2] & (! w_data46125w[2..2])), (w_anode46173w[1..1] & w_data46125w[1..1]), (w_anode46173w[0..0] & w_data46125w[0..0]), w_anode46127w[1..1]);
	w_anode46183w[] = ( (w_anode46183w[2..2] & w_data46125w[2..2]), (w_anode46183w[1..1] & (! w_data46125w[1..1])), (w_anode46183w[0..0] & (! w_data46125w[0..0])), w_anode46127w[1..1]);
	w_anode46193w[] = ( (w_anode46193w[2..2] & w_data46125w[2..2]), (w_anode46193w[1..1] & (! w_data46125w[1..1])), (w_anode46193w[0..0] & w_data46125w[0..0]), w_anode46127w[1..1]);
	w_anode46203w[] = ( (w_anode46203w[2..2] & w_data46125w[2..2]), (w_anode46203w[1..1] & w_data46125w[1..1]), (w_anode46203w[0..0] & (! w_data46125w[0..0])), w_anode46127w[1..1]);
	w_anode46213w[] = ( (w_anode46213w[2..2] & w_data46125w[2..2]), (w_anode46213w[1..1] & w_data46125w[1..1]), (w_anode46213w[0..0] & w_data46125w[0..0]), w_anode46127w[1..1]);
	w_anode46225w[] = ( (w_anode46225w[0..0] & data_wire[3..3]), enable_wire);
	w_anode46232w[] = ( (w_anode46232w[2..2] & (! w_data46125w[2..2])), (w_anode46232w[1..1] & (! w_data46125w[1..1])), (w_anode46232w[0..0] & (! w_data46125w[0..0])), w_anode46225w[1..1]);
	w_anode46243w[] = ( (w_anode46243w[2..2] & (! w_data46125w[2..2])), (w_anode46243w[1..1] & (! w_data46125w[1..1])), (w_anode46243w[0..0] & w_data46125w[0..0]), w_anode46225w[1..1]);
	w_anode46253w[] = ( (w_anode46253w[2..2] & (! w_data46125w[2..2])), (w_anode46253w[1..1] & w_data46125w[1..1]), (w_anode46253w[0..0] & (! w_data46125w[0..0])), w_anode46225w[1..1]);
	w_anode46263w[] = ( (w_anode46263w[2..2] & (! w_data46125w[2..2])), (w_anode46263w[1..1] & w_data46125w[1..1]), (w_anode46263w[0..0] & w_data46125w[0..0]), w_anode46225w[1..1]);
	w_anode46273w[] = ( (w_anode46273w[2..2] & w_data46125w[2..2]), (w_anode46273w[1..1] & (! w_data46125w[1..1])), (w_anode46273w[0..0] & (! w_data46125w[0..0])), w_anode46225w[1..1]);
	w_anode46283w[] = ( (w_anode46283w[2..2] & w_data46125w[2..2]), (w_anode46283w[1..1] & (! w_data46125w[1..1])), (w_anode46283w[0..0] & w_data46125w[0..0]), w_anode46225w[1..1]);
	w_anode46293w[] = ( (w_anode46293w[2..2] & w_data46125w[2..2]), (w_anode46293w[1..1] & w_data46125w[1..1]), (w_anode46293w[0..0] & (! w_data46125w[0..0])), w_anode46225w[1..1]);
	w_anode46303w[] = ( (w_anode46303w[2..2] & w_data46125w[2..2]), (w_anode46303w[1..1] & w_data46125w[1..1]), (w_anode46303w[0..0] & w_data46125w[0..0]), w_anode46225w[1..1]);
	w_data46125w[2..0] = data_wire[2..0];
END;
--VALID FILE
